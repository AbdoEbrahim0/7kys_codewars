#include <string>
using namespace std;
//methode 1 complexty :
class ScalingSqStrings
{
public:
    static std::string scale(const std::string& strng, int k, int n)
    {
        if (strng.size() == 0) return "";
        string res="", dublicated;
        string part;
        vector<string >vec;
        for (int s=0; s < strng.size(); s++)
        {
            for (int j = 0; j < k; j++)
            {
                if(strng[s] != '\n')
                dublicated += strng[s];
                else if (strng[s] == '\n' || s == strng.size() - 1)
                {
                   part = dublicated+"\n";
                   vec.push_back(part);
                   dublicated = "";
                   break;
                }   
            }   
        }   
        vec.push_back(dublicated+"\n");
        for (string val : vec)
        {
            for(int w=0;w<n;w++)
            res += val;
        }
      res.pop_back();
        return res;
    };
};
