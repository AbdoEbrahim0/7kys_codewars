#include <cmath>
#include <cstdio>
#include <vector>
#include <iostream>
#include <algorithm>
#include <cassert>
#include <string>
#include <algorithm>
#include <cstring>
#include <stdio.h>
#include <vector>
#include <regex>
#include <string>
#include <numeric>
#include <stdlib.h>
#include <map>
#include <numeric>
#include<sstream>
#include <set>
#include <cstdint>
#include <array>
using namespace std;
//methode 1 : 
//str = "codewars", a = 1, b = 5 --> "cawedors"
//std::string solve(std::string s, int a, int b){
//    //..
//    string reverse=s;  // there are charcters that are not changing so we pass it as a whole 
//    int k = a;
//    if (b > s.size() - 1) { b = s.size() - 1; }// to check that b is in range stringeven if it is more than its size
//    for (int i = b; i >= a; i--)//  change charcatere that in the range
//    {
//        reverse [k]= s[i];
//        k++;
//    }
//    return reverse;
//}

//methode 2: 
string solve(string s, int a, int b) {
    string reverse = "";
    if (b >= s.length()) b = s.length() - 1;
    for (int i = 0; i < s.length(); i++)
        if (a <= i && a <= b)
            reverse += s[b--];
        else
            reverse += s[i];
    return reverse;
}
   //methode 3 : 
//std::string solve(std::string s, int a, int b) {
//    //..
//    
//    if (b >= s.size() - 1)
//    {
//       reverse(s.begin() + a, s.end());
//    }
//    else
//    {
//        reverse(s.begin() + a, s.begin() + b +1);
//    }
//    return s;
//}
//methode 4 : 
string solve(string s, int a, int b) {
    string res;
    if (b > s.size())b = s.size() - 1;
    for (int i = 0; i < a; i++)res += s[i];
    for (int j = b; j >= a; j--)res += s[j];
    for (int k = b + 1; k < s.size(); k++)res += s[k];
    return res;
}
int main() {

    cout << solve("codewars",1,5) << endl; //srawedoc  "cawedors"
    cout << solve("codingIsFun", 2, 100) << endl; //"conuFsIgnid"
    cout << solve("FunctionalProgramming", 2,15) << endl; //"FuargorPlanoitcnmming"
        return 0;
}
